name: AEM Dev CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'develop-test'
      artifact_version:
        description: "Enter the artifact version to build"
        required: true
        default: "2.0.0"  # Default version if not specified
env:
  AEM_PACKAGE: "saudi-tourism.all-${{ github.event.inputs.artifact_version }}.zip"
  AEM_HOST_PUB1: "https://157a-93-112-36-211.ngrok-free.app"
  AEM_HOST_PUB2: "https://157a-93-112-36-211.ngrok-free.app"
  AEM_HOST_PUB3: "https://157a-93-112-36-211.ngrok-free.app"
  AEM_HOST_AUTHOR: "https://157a-93-112-36-211.ngrok-free.app"
  AEM_USERNAME: ${{ secrets.AEM_USERNAME }}
  AEM_PASSWORD: ${{ secrets.AEM_PASSWORD }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn clean install -DskipTests -Dcheckstyle.skip -DvsVersion=${{github.event.inputs.artifact_version }} 

      - name: Display structure of all jar/files
        run: find . -type f -name "*.zip"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sta-build-artifacts
          path: ./all/target/*.zip
          compression-level: 0
            
  deploy_prodset1:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Package
        uses: actions/download-artifact@v4
        with:
          name: sta-build-artifacts
      - name: Display downloaded files
        run: ls -R
      - name: Deploying on Prod Author
        run: |
          curl -u "$AEM_USERNAME:$AEM_PASSWORD"  -F file=@"$AEM_PACKAGE" -F name="saudi-tourism.all" -F force=true -F install=true "$AEM_HOST_AUTHOR/crx/packmgr/service.jsp"

      # Start Azure Connectin
      - name: Setup Azure Environment
        uses: ./.github/workflows/deploy-reusable.yml
        
        # Start Dispatcher-1 Offloading
      - name: Initiate Dispatcher-1 Off Loading
        run: |
          az account show
          az storage -h
        #run: |
         # az ssh arc --resource-group "VisitSaudi_Arc_Servers" --name "prod-dispatcher2-r" --local-user purgeuser --private-key-file ".ssh/id_rsa" -- -o StrictHostKeyChecking=no  'sudo echo "<body>healthy</body>" > /home/domains/visitsaudi.com/htdocs/health.html'
      - name: Wait for 2 minutes
        uses: actions/wait@v1
        with:
          time: 120
        # Assumming Offloading Completed
        
      - name: Upload and Install package to AEM Publisher 1
        run: |
          curl -u "$AEM_USERNAME:$AEM_PASSWORD"  -F file=@"$AEM_PACKAGE" -F name="saudi-tourism.all" -F force=true -F install=true  "$AEM_HOST_PUB1/crx/packmgr/service.jsp"

      - name: Wait for AEM PUB-1 to be fully Up
        run: |
          MAX_RETRIES=30
          RETRY_INTERVAL=10
          for ((i=1; i<=$MAX_RETRIES; i++)); do
            INACTIVE_BUNDLES=$(curl -u "$AEM_USERNAME:$AEM_PASSWORD" -s "$AEM_HOST_PUB1/system/console/bundles.json" | jq '.data[] | select(.state != "Active" and .state != "Fragment")')
            if [ -z "$INACTIVE_BUNDLES" ]; then
              echo "All AEM bundles are active."
              exit 0
            else
              echo "Some AEM bundles are still not active. Waiting..."
              sleep $RETRY_INTERVAL
            fi
          done
          echo "AEM bundles did not become active within the expected time."
          exit 1
          
      # For Publisher 2
      # dispatcher off loading code to be here
      - name: Upload and Install package to AEM Publisher 2
        run: |
          curl -u "$AEM_USERNAME:$AEM_PASSWORD"  -F file=@"$AEM_PACKAGE" -F name="saudi-tourism.all" -F force=true -F install=true  "$AEM_HOST_PUB2/crx/packmgr/service.jsp"

      - name: Wait for AEM PUB-2 to be fully Up
        run: |
          MAX_RETRIES=30
          RETRY_INTERVAL=10
          for ((i=1; i<=$MAX_RETRIES; i++)); do
            INACTIVE_BUNDLES=$(curl -u "$AEM_USERNAME:$AEM_PASSWORD" -s "$AEM_HOST_PUB2/system/console/bundles.json" | jq '.data[] | select(.state != "Active" and .state != "Fragment")')
            if [ -z "$INACTIVE_BUNDLES" ]; then
              echo "All AEM bundles are active."
              exit 0
            else
              echo "Some AEM bundles are still not active. Waiting..."
              sleep $RETRY_INTERVAL
            fi
          done
          echo "AEM bundles did not become active within the expected time."
          exit 1
