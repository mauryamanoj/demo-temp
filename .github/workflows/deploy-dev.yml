name: VS - Dev Deployment Pipeline
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'develop'
      artifact_version:
        description: "Enter the artifact version to build"
        required: true
        default: "2.0.0"  # Default version if not specified
env:
  AEM_PACKAGE: "saudi-tourism.all-${{ github.event.inputs.artifact_version }}.zip"
  AEM_DEV_AUTHOR_URL: "https://157a-93-112-36-211.ngrok-free.app"
  AEM_DEV_PUBLISH_URL: "https://157a-93-112-36-211.ngrok-free.app"
  AEM_DEV_USERNAME: ${{ secrets.AEM_USERNAME }}
  AEM_DEV_PASSWORD: ${{ secrets.AEM_PASSWORD }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          mvn clean install -DskipTests -Dcheckstyle.skip -DvsVersion=${{github.event.inputs.artifact_version }} 

      - name: Display structure of all jar/files
        run: find . -type f -name "*.zip"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sta-build-artifacts
          path: ./all/target/*.zip
          compression-level: 0
            
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Package
        uses: actions/download-artifact@v4
        with:
          name: sta-build-artifacts
      - name: Display downloaded files
        run:  ls -R
      - name: Deploying on Prod Author
        run: |
          curl -u "$AEM_DEV_USERNAME:$AEM_DEV_PASSWORD"  -F file=@"$AEM_PACKAGE" -F name="saudi-tourism.all" -F force=true -F install=true "$AEM_DEV_AUTHOR_URL/crx/packmgr/service.jsp"

      # Start Azure Connectin
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.DISP_AZURE_CRED }}
      - name: Set Azure CLI dynamic install
        run: |
            az config set extension.use_dynamic_install=yes_without_prompt
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
            az storage -h 
      - name: Install SSH Extension for Azure CLI
        run: |
            az extension add --name ssh
            az ssh config --ip * --file ./ssh_config --keys-destination-folder ./azure-keys
      - name: Set up SSH private key
        run: |
            mkdir -p .ssh
            echo "${{ secrets.SSH_KEY }}" > .ssh/id_rsa
            chmod 600 .ssh/id_rsa
      
        # Start Dispatcher-1 Offloading
      - name: Initiate Dispatcher-1 Off Loading
        run: |
          az ssh arc --resource-group "VisitSaudi_Arc_Servers" --name "dev-dispatcher-r" --local-user purgeuser --private-key-file ".ssh/id_rsa" -- -o StrictHostKeyChecking=no  'sudo echo "Connection Successfull"'
        #run: |
         # az ssh arc --resource-group "VisitSaudi_Arc_Servers" --name "dev-dispatcher-r" --local-user purgeuser --private-key-file ".ssh/id_rsa" -- -o StrictHostKeyChecking=no  'sudo echo "<body>unhealthy</body>" > /home/domains/visitsaudi.com/htdocs/health.html'
             
      - name: Wait for 2 minutes
        run: sleep 120  
        # Assumming Offloading Completed
        #Start Package Upload and Installation to Dev Publisher    
      - name: Upload and Install package to AEM Publisher
        run: |
          curl -u "$AEM_DEV_USERNAME:$AEM_DEV_PASSWORD"  -F file=@"$AEM_PACKAGE" -F name="saudi-tourism.all" -F force=true -F install=true  "$AEM_DEV_PUBLISH_URL/crx/packmgr/service.jsp"

      - name: Wait for AEM Publisher to be Up
        run: |
          MAX_RETRIES=30
          RETRY_INTERVAL=10
          for ((i=1; i<=$MAX_RETRIES; i++)); do
            INACTIVE_BUNDLES=$(curl -u "$AEM_DEV_USERNAME:$AEM_DEV_PASSWORD" -s "$AEM_HOST_PUB1/system/console/bundles.json" | jq '.data[] | select(.state != "Active" and .state != "Fragment")')
            if [ -z "$INACTIVE_BUNDLES" ]; then
              echo "All AEM bundles are active."
              exit 0
            else
              echo "Some AEM bundles are still not active. Waiting..."
              sleep $RETRY_INTERVAL
            fi
          done
          echo "AEM bundles did not become active within the expected time."
          exit 1
      # Invalidate Dispatcher Cache
      - name: Invalidate Dispatcher Cache
        run: |
          az ssh arc --resource-group "VisitSaudi_Arc_Servers" --name "dev-dispatcher-r" --local-user purgeuser --private-key-file ".ssh/id_rsa" -- -o StrictHostKeyChecking=no  'sudo rm -rf /home/domains/visitsaudi.com/htdocs/*'
      - name: End of Pipeline execution
        run: |
          echo "Deployment Completed, Ignore CDN Invalidation as dev is setup with CDN, CDN Invalidation will be Implemented once it is Onboarded"
